@page "/chat"
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@using SoftwareProject.Client.Data
@using SoftwareProject.Services
@using SoftwareProject.Client.Layout
@inject AuthenticationStateProvider AuthStateProvider
@inject HttpClient http
@inject NavigationManager NavigationManager
@inject ApiService ai
@inject ISnackbar Snackbar
@inject TopicService topicService


<MudThemeProvider Theme="@_theme" IsDarkMode="_isDarkMode"/>
<MudPopoverProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>
<MudLayout>
   <MudAppBar Elevation="1">
      <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start"
                     OnClick="@((e) => DrawerToggle())"/>
      <MudLink Typo="Typo.h5" Underline="Underline.None" Href="/" Class="ml-3">Novachat</MudLink>
      <MudSpacer/>
      <MudIconButton Icon="@(DarkLightModeButtonIcon)" Color="Color.Inherit" OnClick="@DarkModeToggle"/>

      <CascadingAuthenticationState>
         <AuthorizeView>
            <Authorized>
               <MudButton Size="Size.Large" OnClick="() => QuickSettingsUp = !QuickSettingsUp" EndIcon="@DropdownIcon">
                  @context.User.FindFirst(ClaimTypes.Name)?.Value
                  <MudPopover AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight" Open="QuickSettingsUp">
                     <MudPaper Class="is-display-flex p-3 is-flex-direction-column is-align-items-flex-start"
                               Width="20rem" Elevation="0">
                        <MudText Typo="Typo.h6"><b>Quick Settings</b></MudText>
                        <MudStack Class="is-align-items-center" Style="width: 100%" Row="true">
                           <MudText>Use Fake</MudText>
                           <MudSpacer></MudSpacer>
                           <MudToggleIconButton @bind-Toggled="UseFake"
                                                Icon="@Icons.Material.Filled.CheckCircle"
                                                Color="@Color.Success"
                                                ToggledIcon="@Icons.Material.Filled.Cancel"
                                                ToggledColor="@Color.Error"
                                                title="@(UseFake ? "On" : "Off")"/>
                        </MudStack>
                        <MudSelect Value="Fonts[0]" Variant="Variant.Outlined" Class="mb-2" FullWidth="true" T="string" Label="Font">
                           <MudSelectItem Value="Fonts[0]" T="string">Default</MudSelectItem>
                           <MudSelectItem Value="Fonts[1]" T="string">Calibri</MudSelectItem>
                           <MudSelectItem Value="Fonts[2]" T="string">Cool font</MudSelectItem>
                           <MudSelectItem Value="Fonts[3]" T="string">Shit fucking font</MudSelectItem>
                        </MudSelect>
                        <MudNumericField Value="11" FullWidth="true" Class="mb-2" Label="Font Size" Variant="Variant.Outlined" Min="11" Max="50" />
                        <MudSelect @bind-Value="Language" Variant="Variant.Outlined" Class="mb-2" FullWidth="true" T="Language" Label="Language">
                           <MudSelectItem Value="Languages.English" T="Language">@Languages.English.Name</MudSelectItem>
                           <MudSelectItem Value="Languages.French" T="Language">@Languages.French.Name</MudSelectItem>
                           <MudSelectItem Value="Languages.Japanese" T="Language">@Languages.Japanese.Name</MudSelectItem>
                           <MudSelectItem Value="Languages.Chinese" T="Language">@Languages.Chinese.Name</MudSelectItem>
                           <MudSelectItem Value="Languages.Spanish" T="Language">@Languages.Spanish.Name</MudSelectItem>
                           <MudSelectItem Value="Languages.German" T="Language">@Languages.German.Name</MudSelectItem>
                        </MudSelect>
                        <MudButton Class="is-align-self-flex-end" Variant="Variant.Filled" Color="Color.Error" OnClick="Logout">Logout</MudButton>
                     </MudPaper>
                  </MudPopover>
               </MudButton>
            </Authorized>
            <NotAuthorized>
               <p>Not Logged In</p>
            </NotAuthorized>
         </AuthorizeView>
      </CascadingAuthenticationState>

   </MudAppBar>
   <MudDrawer id="nav-drawer" Width="20%" @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
      <MudList Dense="true" T="string">
         <MudListItem>
            Test topic 1 - my brother has sepsis and wants to kill himself?
         </MudListItem>
         <MudListItem>
            Test topic 2 - cheers mate nan's done a backflip
         </MudListItem>
         <MudListItem>
            Test topic 3 - thats mint that
         </MudListItem>
         <MudListItem>
            Test topic 4 - 6 bomba rasclat pussi clart bomba rasclart egg
         </MudListItem>
      </MudList>
   </MudDrawer>
   <MudMainContent Style="height: calc(100vh - var(--mud-appbar-height))" Class="mt-16 pa-4">
      <MudPaper class="d-flex flex-column p-0" style="height: 100%;">
         <MudPaper Elevation="0" Class="is-flex-grow-1 is-overflow-y-scroll">

            @foreach (Message response in apiResponses)
            {
               if (response.isUser)
               {
                  <MudChat ChatPosition="ChatBubblePosition.End">
                     <MudChatBubble>
                        <MudMarkdown CodeBlockTheme="CodeBlockTheme.Arta" Value="@response.content"></MudMarkdown>
                     </MudChatBubble>
                  </MudChat>
               }
               else
               {
                  <MudChat ChatPosition="ChatBubblePosition.Start">
                     <MudChatBubble>
                        <MudMarkdown CodeBlockTheme="CodeBlockTheme.A11yDark" Value="@response.content"></MudMarkdown>
                     </MudChatBubble>
                  </MudChat>
               }
            }

         </MudPaper>
         <MudPaper Elevation="0" Style="background-color: transparent" Height="12%">
            <MudPaper Elevation="0" class="d-flex flex-grow-1 gap-4 p-3">
               <MudPaper Elevation="0" Width="11%" align="center" Class="d-flex justify-center is-align-items-center">
                  <MudButton Variant="Variant.Filled" OnClick="() => SummariseText = !SummariseText" StartIcon="@SummariseTextLabel" Color="SummariseButtonColor">Summarise</MudButton>
               </MudPaper>
               <MudPaper Style="background-color: transparent" Elevation="0" Width="90%">
                  <MudTextField Disabled="SendingDisabled" AutoGrow="true" MaxLines="2" OnKeyDown="PromptEnterHandler" @bind-Value="Question" T="string"
                                Immediate="true" Variant="Variant.Outlined" Label="Message"/>
               </MudPaper>
               <MudPaper Style="background-color: transparent" Elevation="0" Width="10%" Class="d-flex justify-center">
                  <MudButton Disabled="SendingDisabled" OnClick="Submit" StartIcon="@Icons.Material.Filled.Send"
                             Variant="Variant.Filled" Color="Color.Primary" FullWidth="true">Send
                  </MudButton>
               </MudPaper>
            </MudPaper>
         </MudPaper>
      </MudPaper>
   </MudMainContent>
</MudLayout>
<div id="blazor-error-ui" data-nosnippet>
   An unhandled error has occurresd.
   <a href="." class="reload">Reload</a>
   <span class="dismiss">🗙</span>
</div>